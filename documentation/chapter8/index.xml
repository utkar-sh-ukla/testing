<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JDBC escapes on Pgjdbc</title><link>https://utkar-sh-ukla.github.io/testing/documentation/chapter8/</link><description>Recent content in JDBC escapes on Pgjdbc</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 19 Jun 2022 22:46:55 +0530</lastBuildDate><atom:link href="https://utkar-sh-ukla.github.io/testing/documentation/chapter8/index.xml" rel="self" type="application/rss+xml"/><item><title>JDBC escapes</title><link>https://utkar-sh-ukla.github.io/testing/documentation/chapter8/escapes/</link><pubDate>Sun, 19 Jun 2022 22:46:55 +0530</pubDate><guid>https://utkar-sh-ukla.github.io/testing/documentation/chapter8/escapes/</guid><description>The JDBC specification (like the ODBC specification) acknowledges the fact that some vendor specific SQL may be required for certain RDBMS features. To aid developers in writing portable JDBC applications across multiple database products, a special escape syntax is used to specify the generic commands the developer wants to be run. The JDBC driver translates these escape sequences into native syntax for its specific database. For more information consult the Java DB Technical Documentation.</description></item><item><title>Escape for outer joins</title><link>https://utkar-sh-ukla.github.io/testing/documentation/chapter8/outer-joins-escape/</link><pubDate>Sun, 19 Jun 2022 22:46:55 +0530</pubDate><guid>https://utkar-sh-ukla.github.io/testing/documentation/chapter8/outer-joins-escape/</guid><description>You can specify outer joins using the following syntax: {oj table (LEFT|RIGHT|FULL) OUTER JOIN (table | outer-join) ON search-condition }
For example :
ResultSet rs = stmt.executeQuery( &amp;#34;select * from {oj a left outer join b on (a.i=b.i)} &amp;#34;);</description></item><item><title>Date-time escapes</title><link>https://utkar-sh-ukla.github.io/testing/documentation/chapter8/escapes-datetime/</link><pubDate>Sun, 19 Jun 2022 22:46:55 +0530</pubDate><guid>https://utkar-sh-ukla.github.io/testing/documentation/chapter8/escapes-datetime/</guid><description>The JDBC specification defines escapes for specifying date, time and timestamp values which are supported by the driver.
date
{d 'yyyy-mm-dd'} which is translated to DATE 'yyyy-mm-dd'
time
{t 'hh:mm:ss'} which is translated to TIME 'hh:mm:ss'
timestamp
{ts 'yyyy-mm-dd hh:mm:ss.f...'} which is translated to TIMESTAMP 'yyyy-mm-dd hh:mm:ss.f'The fractional seconds (.f&amp;hellip;) portion of the TIMESTAMP can be omitted.</description></item><item><title>Escaped scalar functions</title><link>https://utkar-sh-ukla.github.io/testing/documentation/chapter8/escaped-functions/</link><pubDate>Sun, 19 Jun 2022 22:46:55 +0530</pubDate><guid>https://utkar-sh-ukla.github.io/testing/documentation/chapter8/escaped-functions/</guid><description>The JDBC specification defines functions with an escape call syntax : {fn function_name(arguments)}. The following tables show which functions are supported by the PostgreSQLâ„¢ driver. The driver supports the nesting and the mixing of escaped functions and escaped values. The appendix C of the JDBC specification describes the functions.
Some functions in the following tables are translated but reported as not supported because they are duplicating or changing their order of the arguments.</description></item></channel></rss>