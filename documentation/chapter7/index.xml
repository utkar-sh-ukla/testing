<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Storing Binary Data on Pgjdbc</title>
    <link>https://utkar-sh-ukla.github.io/testing/documentation/chapter7/</link>
    <description>Recent content in Storing Binary Data on Pgjdbc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Jun 2022 22:46:55 +0530</lastBuildDate><atom:link href="https://utkar-sh-ukla.github.io/testing/documentation/chapter7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Storing Binary Data</title>
      <link>https://utkar-sh-ukla.github.io/testing/documentation/chapter7/binary-data/</link>
      <pubDate>Sun, 19 Jun 2022 22:46:55 +0530</pubDate>
      
      <guid>https://utkar-sh-ukla.github.io/testing/documentation/chapter7/binary-data/</guid>
      <description>PostgreSQLâ„¢ provides two distinct ways to store binary data. Binary data can be stored in a table using the data type BYTEA or by using the Large Object feature which stores the binary data in a separate table in a special format and refers to that table by storing a value of type OID in your table.
In order to determine which method is appropriate you need to understand the limitations of each method.</description>
    </item>
    
  </channel>
</rss>
